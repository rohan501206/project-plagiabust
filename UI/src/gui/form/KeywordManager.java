/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DocumentManagerForm.java
 *
 * Created on Jun 5, 2011, 11:41:05 AM
 */
package gui.form;


import java.io.File;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import preprocess.KeyWordsRemover;
/**
 *
 * @author Brave Heart
 */
public class KeywordManager extends javax.swing.JFrame {

    public static KeywordManager keywordManager;
    DefaultTableModel model;
    ArrayList<String> KeyWordList = new ArrayList<String>();
    int [] data = {1,2,3,4,5,6,7,8,9};
    Vector col = new Vector();
    /** Creates new form DocumentManagerForm */
    private KeywordManager() {
        initComponents();
        String[] columns = {"No","Keyword"};
        model = new DefaultTableModel(columns, 0);
        this.setIconImage(Main.getPlagiabustImage());
     }

    public static KeywordManager getInstance() {
        if (keywordManager == null) {
            keywordManager = new KeywordManager();
        }
        return keywordManager;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        KeywordsManagerMainPanel = new javax.swing.JPanel();
        CommandPanel = new javax.swing.JPanel();
        RemoveKeyWordButton = new javax.swing.JButton();
        DoneButton = new javax.swing.JButton();
        KeywordManagerImageLabel = new javax.swing.JLabel();
        KeywordTableScrollPane = new javax.swing.JScrollPane();
        KeywordsTable = new javax.swing.JTable();
        KeywordsTableSeparator = new javax.swing.JSeparator();
        NumOfKeywordsLabel = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Keywords Manager");
        setResizable(false);

        KeywordsManagerMainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add or Remove Keywords  :", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        KeywordsManagerMainPanel.setFont(new java.awt.Font("Tahoma", 0, 12));
        KeywordsManagerMainPanel.setPreferredSize(new java.awt.Dimension(600, 360));

        CommandPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Commands :", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        RemoveKeyWordButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        RemoveKeyWordButton.setText("Remove Keyword");
        RemoveKeyWordButton.setPreferredSize(new java.awt.Dimension(180, 40));
        RemoveKeyWordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveKeyWordButtonActionPerformed(evt);
            }
        });

        DoneButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        DoneButton.setText("Done");
        DoneButton.setPreferredSize(new java.awt.Dimension(180, 40));
        DoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CommandPanelLayout = new javax.swing.GroupLayout(CommandPanel);
        CommandPanel.setLayout(CommandPanelLayout);
        CommandPanelLayout.setHorizontalGroup(
            CommandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommandPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CommandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DoneButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RemoveKeyWordButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CommandPanelLayout.setVerticalGroup(
            CommandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommandPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(RemoveKeyWordButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DoneButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        KeywordManagerImageLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        KeywordsTable.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        KeywordsTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        KeywordsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "#", "Keyword"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        KeywordsTable.setColumnSelectionAllowed(true);
        KeywordsTable.getTableHeader().setReorderingAllowed(false);
        KeywordTableScrollPane.setViewportView(KeywordsTable);
        KeywordsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        KeywordsTable.getColumnModel().getColumn(0).setPreferredWidth(42);
        KeywordsTable.getColumnModel().getColumn(1).setPreferredWidth(415);

        KeywordsTableSeparator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout KeywordsManagerMainPanelLayout = new javax.swing.GroupLayout(KeywordsManagerMainPanel);
        KeywordsManagerMainPanel.setLayout(KeywordsManagerMainPanelLayout);
        KeywordsManagerMainPanelLayout.setHorizontalGroup(
            KeywordsManagerMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KeywordsManagerMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(KeywordsManagerMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KeywordsManagerMainPanelLayout.createSequentialGroup()
                        .addComponent(KeywordManagerImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                        .addGap(8, 8, 8))
                    .addGroup(KeywordsManagerMainPanelLayout.createSequentialGroup()
                        .addComponent(CommandPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(KeywordsTableSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(KeywordTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                .addContainerGap())
        );
        KeywordsManagerMainPanelLayout.setVerticalGroup(
            KeywordsManagerMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KeywordsManagerMainPanelLayout.createSequentialGroup()
                .addGroup(KeywordsManagerMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(KeywordsTableSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .addGroup(KeywordsManagerMainPanelLayout.createSequentialGroup()
                        .addComponent(KeywordManagerImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CommandPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(KeywordTableScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE))
                .addContainerGap())
        );

        NumOfKeywordsLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        NumOfKeywordsLabel.setText("Keyword added. - ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NumOfKeywordsLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
                    .addComponent(KeywordsManagerMainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(KeywordsManagerMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NumOfKeywordsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void firstBind(){
        for (int i = 0; i<KeywordsTable.getRowCount(); i++) {
            if(KeywordsTable.getValueAt(i, 1)!= null){
                KeyWordList.add(KeywordsTable.getValueAt(i, 1).toString());
                
            }
            
        }
    }
    private void bindData(){ 
        for (int i = 0; i < KeyWordList.size(); i++) {
            Vector row = new Vector();
            row.add(i+1);
            row.add(KeyWordList.get(i));
            model.addRow(row);
        }
        KeywordsTable.setModel(model);
    }



    private void RemoveKeyWordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveKeyWordButtonActionPerformed

        int[] selectedRows = KeywordsTable.getSelectedRows();
        for (int i = 0; i < selectedRows.length; i++) {
            if(KeywordsTable.getValueAt(selectedRows[i], 1) != null){
                KeywordsTable.setValueAt(null,selectedRows[i],1);
            }
            else{
                JOptionPane jop = new JOptionPane();
                jop.showMessageDialog(this, "Nothing to remove");
            }
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_RemoveKeyWordButtonActionPerformed

    public String arraylistToSting(ArrayList<String> token) {
        StringBuilder out = new StringBuilder();
        for (Object o : token) {
            out.append(o.toString());
            out.append("\n");
        }
        return out.toString();
    }


    private void DoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoneButtonActionPerformed
        this.firstBind();
        if(KeyWordList.isEmpty()){
            JOptionPane jop = new JOptionPane();
            jop.showMessageDialog(this, "Nothing to add");
        }
        else{
            this.bindData();
            String content = this.arraylistToSting(KeyWordList);
            KeyWordsRemover keyremover = new KeyWordsRemover();
            keyremover.addKeyWordsToList("src" + File.separatorChar + "preprocess" + File.separatorChar + "StopWordList", content);
            JOptionPane jop = new JOptionPane();
            jop.showMessageDialog(this, "keywords successfully added to the list");
            this.setVisible(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_DoneButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CommandPanel;
    private javax.swing.JButton DoneButton;
    private javax.swing.JLabel KeywordManagerImageLabel;
    private javax.swing.JScrollPane KeywordTableScrollPane;
    private javax.swing.JPanel KeywordsManagerMainPanel;
    private javax.swing.JTable KeywordsTable;
    private javax.swing.JSeparator KeywordsTableSeparator;
    private javax.swing.JLabel NumOfKeywordsLabel;
    private javax.swing.JButton RemoveKeyWordButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
