Agile software development
Scribd
Upload a Document
Search Documents
Explore
Documents
Books - Fiction
Books - Non-fiction
Health & Medicine
Brochures/Catalogs
Government Docs
How-To Guides/Manuals
Magazines/Newspapers
Recipes/Menus
School Work
+ all categories
Featured
Recent
People
Authors
Students
Researchers
Publishers
Government & Nonprofits
Businesses
Musicians
Artists & Designers
Teachers
+ all categories
Most Followed
Popular
Sign Up
|
Log In
1
/ 12
View ModeSlideshowScroll
Reading should be social! Post a message on your social networks to let others know what you're reading. Select the sites below and start sharing.
Readcast this Document
Login to Add a Comment
Share & Embed
Download this Document for Free
/g, '>'); $('disable_highlighting').show(); $('ipaper_highlighting_box').show(); }
Agile software development
From Wikipedia, the free encyclopedia
Agile Software Development is a conceptualframework
for software development that promotes development
iterations, open collaboration, and adaptability throughout
the life-cycle of the project.
There are many agile development methods; most minimize
risk by developing software in short amounts of time.
Software developed during one unit of time is referred to as
an iteration, which typically lasts from two to four weeks.
Each iteration passes through a full software development
cycle: including planning, requirements analysis, design,
coding and testing. Documentation is no different than
software design and coding. It too is produced as required
by stakeholders. An iteration may not add enough
functionality to warrant releasing the product to market but
the goal is to have an available release (without bugs) at the
end of each iteration. At the end of each iteration,
stakeholders re-evaluate project priorities with a view to
optimizing their return on investment.
Agile methods emphasize face-to-face communication over written documents. Most agile teams are
located in a single open office to facilitate such communications. One agile management methodology,
scrum, advocates a team size of 5 to 9. Larger teams than 9 should be split into smaller teams to help
make team communication and team collaboration easier.
Team composition in an agile project will usually be cross-functional and self-organising without
consideration for any existing corporate hierarchy or the corporate roles of team members. No matter
what development disciplines are required, at a minimum, every agile team will contain a customer
representative. This person is appointed by stakeholders to act on their behalf and makes a personal
commitment to being available for developers to answer mid-iteration problem domain questions. This
availability is critical to agile project success.
Part of the scrum methodology is routine and formal daily face-to-face communication between team
members. This specifically includes the customer representative and with any interested stakeholders as
observers. Known as a daily scrum, team members report to each other what they did yesterday, what
they intend to do today and what their roadblocks are. This formalised face-to-face communication
prevents problems being hidden provided always that someone with corporate influence is listening. For
the Scrum methodology, this would be the Scrum Master. Otherwise it would be the agile project
manager.
Agile methods emphasize working software as the primary measure of progress. Combined with the preference for face-to-face communication, agile methods usually produce less written documentation than other methods. In an agile project, documentation, Gantt charts and other project artifacts all rank equally with working product. However, when stakeholders are asked to prioritise deliverables for
Software development process
Activities and steps
Requirements· Architecture
Design· Implementation
Testing· Deployment
Models
Agile ·Cleanroom ·Ite r ati ve ·RAD
RUP· Spiral· Waterfall· XP· Scrum
Supporting disciplines
Configuration management
Documentation
Quality assurance (SQA)
Project management
User experience design
Page 1 of 12
Agile software development - Wikipedia, the free encyclopedia
6/4/2008
htt ://en.wiki edia.or /wiki/A ile_software_develo ment
demonstration at the end of the current iteration, they prefer to see working product. This represents a
strong focus on a return on investment. Stakeholders are encouraged to prioritise iteration outcomes
based on business value. If documentation represents higher business value than working software in any
particular iteration then it will be given a higher priority than working software.
Agile development methods are typically more disciplined than traditional methods.
History
The modern definition of agile software development evolved in the mid-1990s as part of a reaction
against "heavyweight" methods, as typified by a heavily regulated, regimented, micro-managed use of the
waterfall model of development. The processes originating from this use of the waterfall model were seen
as bureaucratic, slow, demeaning, and inconsistent with the ways that software developers actually
perform effective work. A case can be made that agile and iterative development methods are a return to
development practice seen early in the history of software development.[1] Initially, agile methods were
called "lightweight methods." In 2001, prominent members of the community met at Snowbird, Utah, and
adopted the name "agile methods." Later, some of these people formed The Agile Alliance[2], a non-
profit organization that promotes agile development.
A number of methods similar to Agile were created prior to 2000. An adaptive software development
process was introduced in a paper by Edmonds (1974)[3]. Notable earlier methods include Scrum (1986),
Crystal Clear, Extreme Programming (1996), Adaptive Software Development, Feature Driven
Development, and Dynamic Systems Development Method(DSDM) (1995).
Contents
1 History
2 Principles behind agile methods — The Agile Manifesto
3 Comparison with other methods
3.1 Contrasted with other iterative development methods
3.2 Contrasted with the waterfall model
3.3 Contrasted with "cowboy coding"
4 Suitability of agile methods
5 Agile Data
6 Agile methods and method tailoring
7 Agile methods and project management
8 Project management tools for agile development teams
9 Agile methods
10 Agile beyond software development
11 Measuring agility
12 Criticism
13 Post-Agilism
14 Experience reports
15 See also
16 References
17 Further reading
18 External links
Page 2 of 12
Agile software development - Wikipedia, the free encyclopedia
6/4/2008
htt ://en.wiki edia.or /wiki/A ile_software_develo ment
Kent Beck created Extreme Programming (usually abbreviated as "XP") in 1996 as a way to rescue the
struggling Chrysler Comprehensive Compensation (C3) project. While Chrysler eventually canceled that
project, the method was refined by Ron Jeffries' full-time XP coaching, public discussion on Ward
Cunningham's Portland Pattern Repository wiki and further work by Beck, including a book in 1999.[4]
Elements of Extreme Programming appear to be based on Scrum and Ward Cunningham's Episodes
pattern language.
Principles behind agile methods — The Agile Manifesto
See also: Agile Manifesto
Agile methods are a family of development processes, not a single approach to software development. In
2001, 17 prominent figures[5] in the field of agile development (then called "light-weight methods") came together at the Snowbird ski resort in Utah to discuss ways of creating software in a lighter, faster, more people-centric way. They created the Agile Manifesto, widely regarded as the canonical definition of agile development and accompanying agile principles.
Some of the principles behind the Agile Manifesto[6]are:
Customer satisfaction by rapid, continuous delivery of useful software
Working software is delivered frequently (weeks rather than months)
Working software is the principal measure of progress
Even late changes in requirements are welcomed
Close, daily cooperation between business people and developers
Face-to-face conversation is the best form of communication (Co-location)
Projects are built around motivated individuals, who should be trusted
Continuous attention to technical excellence and good design
Simplicity
Self-organizing teams
Regular adaptation to changing circumstances
The manifesto spawned a movement in the software industry known as agile software development.
In 2005, Alistair Cockburn and Jim Highsmith gathered another group of people — management experts,
this time — and wrote an addendum, known as the PM Declaration of Interdependence.
Comparison with other methods
Agile methods are sometimes characterized as being at the opposite end of the spectrum from "plan-
driven" or "disciplined" methods. This distinction is misleading, as it implies that agile methods are
"unplanned" or "undisciplined". A more accurate distinction is that methods exist on a continuum from
"adaptive" to "predictive".[7] Agile methods lie on the "adaptive" side of this continuum.
Adaptive methods focus on adapting quickly to changing realities. When the needs of a project change,
an adaptive team changes as well. An adaptive team will have difficulty describing exactly what will
happen in the future. The further away a date is, the more vague an adaptive method will be about what
will happen on that date. An adaptive team can report exactly what tasks are being done next week, but
only which features are planned for next month. When asked about a release six months from now, an
Page 3 of 12
Agile software development - Wikipedia, the free encyclopedia
6/4/2008
htt ://en.wiki edia.or /wiki/A ile_software_develo ment
Agile software development
Download this Document for FreePrintMobileCollectionsReport Document
Report this document?
Please tell us reason(s) for reporting this document
Spam or junk
Porn adult content
Hateful or offensive
If you are the copyright owner of this document and want to report it, please follow these directions to submit a copyright infringement notice.
Report Cancel
This is a private document.
Info and Rating
Reads:
10,989
Uploaded:
06/09/2008
Category:
Research>Internet & Technology
Rated:
(<span class="notranslate">8</span> Ratings)
Copyright:
Attribution Non-commercial
Agile software Development
software development
Technology-Computer-Science
software development
Technology-Computer-Science
(fewer)
Follow
rk09
Share & Embed
Related Documents
PreviousNext
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
p.
More from this user
PreviousNext
321 p.
16 p.
304 p.
64 p.
344 p.
482 p.
19 p.
8 p.
8 p.
6 p.
9 p.
8 p.
3 p.
2 p.
132 p.
545 p.
41 p.
11 p.
27 p.
80 p.
23 p.
12 p.
Recent Readcasters
Add a Comment
Submit
Characters: ...
Tourism Romanialeft a comment
Very interesting development process. Thanks for sharing your experience! Alex, http://www.bookiestore.com
07 / 21 / 2010
Reply
Print this document
High Quality
Open the downloaded document, and select print from the file menu (PDF reader required).Download and Print
Sign up
Use your Facebook login and see what your friends are reading and sharing.
Other login optionsLogin with Facebook
Signup
I don't have a Facebook account
email address (required)
create username (required)
password (required)
Send me the Scribd Newsletter, and occasional account related communications.
Sign Up Privacy policy
You will receive email notifications regarding your account activity. You can manage these notifications in your account settings. We promise to respect your privacy.
Why Sign up?
Discover and connect with people of similar interests.
Publish your documents quickly and easily.
Share your reading interests on Scribd and social sites.
Already have a Scribd account?
email address or username
password
Log In Trouble logging in?
Login Successful
Now bringing you back...
« Back to Login
Reset your password
Please enter your email address below to reset your password. We will send you an email with instructions on how to continue.
Email address:
You need to provide a login for this account as well.
Login:
Submit
Upload a Document
Search Documents
Follow Us!
scribd.com/scribd
twitter.com/scribd
facebook.com/scribd
About
Press
Blog
Partners
Scribd 101
Web Stuff
Scribd Store
Support
FAQ
Developers / API
Jobs
Terms
Copyright
Privacy
Copyright © 2011 Scribd Inc.
Language:
Choose the language in which you want to experience Scribd:
English
Español
Português (Brasil)
*/ } }); (function() { document.observe('dom:loaded', function() { new Scribd.Toolbar.Tooltips.Tooltip("toolbar_readcast"); }); })(); (function() { document.observe('dom:loaded', function() { new Scribd.Toolbar.Tooltips.Tooltip("toolbar_comment"); }); })(); (function() { document.observe('dom:loaded', function() { new Scribd.Toolbar.Tooltips.Tooltip("toolbar_embed"); }); })(); Scribd.Readcast = Scribd.Readcast || {}; Scribd.Readcast.Dialog = Scribd.Readcast.Dialog || {}; Scribd.Readcast.Dialog.animation = 'fourgen'; Scribd.comment = new Scribd.commentManager(); Event.observe('document_comment_form', 'submit', Scribd.comment.submitCommentEvent.bindAsEventListener(Scribd.comment)); Scribd.scribbleComment($('comment_input')); Scribd.enforceMaxLength($("autogen_id_270567896").down('textarea'), $("autogen_id_270567896").down('.number'), 400); var closeButton = $('autogen_id_270567896').down('.close_button'); if(closeButton) closeButton.observe('click', function(e) { Scribd.Toolbar.actions.comment(e) }); $('toolbar_exposed_share_panel').down('.more_share_options').down('.pseudoLink').observe('click', function(e){ e.stop(); Scribd.Lightbox.remoteOpen('toolbar_share_lightbox', '/word/toolbar_share', Scribd.Toolbar.toolbarParams(), {close: true}); $rat('sharebox.toolbar.more_share_options'); }); $$('#toolbar_exposed_share_panel a.disabled').invoke('observe', 'click', function(e) { e.stop(); Scribd.Alerts.error('flashes_placeholder', "Sharing is disabled for this document."); }); var closeButton = $('autogen_id_270566666').down('.close_button'); if(closeButton) closeButton.observe('click', function(e) { Scribd.Toolbar.actions.embed(e) }); (function() { document.observe('dom:loaded', function() { new Scribd.Toolbar.Tooltips.Tooltip("add_to_collections"); }); })(); (function() { document.observe('dom:loaded', function() { new Scribd.Toolbar.Tooltips.Tooltip("hide_switch"); }); })(); Scribd.HotSpot.initialize(); $('flag_document_link').observe('click', function(e) { e.stop(); if (!$('flag_document_link').hasClassName('disabled')){ $('flag_document_container').toggle(); } }); $$('#flag_document_container .cancel').each(function(el) { el.observe('click', function(e) { e.stop(); $('flag_document_container').hide(); }); }); document.observe('dom:loaded', function() { function ratingLogin(event) { Scribd.login.open({"next_url":"http://www.scribd.com/doc/3281936/Agile-software-development","fallback_url":"/","context":"rate"}); } function saveRating(event) { new Ajax.Request(["/", "r", "a", "t", "i", "n", "g", "s", "?", "w", "o", "r", "d", "_", "d", "o", "c", "u", "m", "e", "n", "t", "_", "i", "d", "=", "3", "2", "8", "1", "9", "3", "6"].join(''), { parameters: event.memo }); } function enableRating() { var rating = $('rating'); if(rating) { var save = saveRating; var login = ratingLogin; $('rating').observe('starbox:rated', function(event){ Scribd.Facebook.isSessionTransitioned() ? save(event) : login(event); }); } } try { new Starbox("rating_3281936", 4.75, { className: 'pointy', locked: false, effect: { mouseout: false } }); } catch(e) {} enableRating(); var tag_list = $('tag_list'); if(tag_list) { var fullList = $('tags_all'); var truncatedList = $('tags_truncated'); tag_list.select('.control_btn').invoke('observe', 'click', function(e) { e.stop(); fullList.toggle(); truncatedList.toggle(); }); } }); new Scribd.LikeButtonManager(null, 'facebook_like_button', "http://www.scribd.com/doc/3281936/Agile-software-development", 300, "standard", "show_faces=\"true\""); $('exposed_share_panel').down('.more_share_options').down('.pseudoLink').observe('click', function(e){ e.stop(); Scribd.Lightbox.remoteOpen('toolbar_share_lightbox', '/word/toolbar_share', Scribd.Toolbar.toolbarParams(), {close: true}); $rat('sharebox.viewbar.more_share_options'); }); $$('#exposed_share_panel a.disabled').invoke('observe', 'click', function(e) { e.stop(); Scribd.Alerts.error('flashes_placeholder', "Sharing is disabled for this document."); }); var activate_scribble = function(){ var toggler = function(comments_selector) { var top = $$(comments_selector); if(top.length > 0 && top[0].down('.toggle')) { var toggle = top[0].down('.toggle'); var panel = top[0].down('.events'); var open = panel.visible(); var animationScope = 'comments:' + comments_selector; var switchFunc = function(e) { if(e) e.stop(); if(open) { animation = new Effect.BlindUp(panel, { duration: 0.5, beforeSetup: function() { toggle.removeClassName('open'); }, queue: { scope: animationScope, limit: 2 } }); } else { toggle.addClassName('open'); animation = new Effect.BlindDown(panel, { duration: 0.5, beforeSetup: function() { toggle.addClassName('open'); }, queue: { scope: animationScope, limit: 2 } }); } open ^= true; }; toggle.observe('click', switchFunc); return switchFunc; } else { return function(e) { if(e) e.stop(); }; } } var toggleFriends = toggler('.comments.friends'); var toggleOther = toggler('.comments.other'); // Toggle comment form document.observe('click', function(e) { var clicker = e.findElement(); var textElement = $$('#document_comment textarea').first(); if (clicker === textElement) { clicker.up('.add_a_comment').addClassName('on'); document.fire('scribd:dom_height_changed'); return; } // we only close the textarea if the user click outside of the form var formElement = clicker.up('#document_comment'); if (!formElement) { if(textElement.getValue().blank()) { textElement.up('.add_a_comment').removeClassName('on'); document.fire('scribd:dom_height_changed'); } } }); $('document_comment').observe('submit', Scribd.comment.submitCommentEvent.bindAsEventListener(Scribd.comment)); $('document_comment').observe('submit', function(e) { var other = e.element().up('#comments_section').down('.comments.other .events'); var friends = e.element().up('#comments_section').down('.comments.friends .events'); if(other && !other.visible()) toggleOther(); if(friends && friends.visible()) toggleFriends(); document.fire('scribd:dom_height_changed'); }); var revealer = $('document_activity').down('.revealer'); if(revealer) revealer.observe('click', Scribd.getMoreComments.bindAsEventListener(revealer, "3281936", 2, { per_page: 5, context: 'r3' })); }; document.observe('dom:loaded', activate_scribble); document.observe(Scribd.Facebook.EVENTS.transition, activate_scribble); Scribd.enforceMaxLength($("autogen_id_270576547").down('textarea'), $("autogen_id_270576547").down('.number'), 400); document.observe("dom:loaded", function() { Scribd.Pingback.run(["/", "d", "o", "c", "u", "m", "e", "n", "t", "s", "/", "3", "2", "8", "1", "9", "3", "6", "/", "p", "i", "n", "g", "b", "a", "c", "k"].join('')); }); new Scribd.printLightboxManager4Gen({ container: $('lightbox_print'), logged_in: false, document_id: 3281936, autodown_base_url: '/doc/3281936/Agile-software-development', base_url: 'http://www.scribd.com/document_downloads/3281936', page_count: 12, show_gate: true}); Scribd.Facebook.isReadPage = true;Scribd.Facebook.setPageTransitionURL('/session_transition/new_4gen_page_content/3281936');Scribd.Premium.ReadPage.initialize({logged_in:false, show_gate: true, extension: 'pdf', document_id: 3281936, secret_password: ""});document.observe('Scribd.Facebook.EVENTS.auto_logged_in', Scribd.enableDocumentCollectionForm);Scribd.SharedLink.trackDocumentLink('3281936');document.observe('dom:loaded', Scribd.processHash); document.observe(Scribd.Facebook.EVENTS.loaded, function() { FB.Event.subscribe('edge.create', function() { $rat('fb.like'); }); }); Scribd.Tracker.run(3281936, "html"); Scribd.Lightbox.initialize(); $('word_user_login_login_lb').observe('keypress', Scribd.restrictCharactersForUsername); Event.observe(window, 'load', function(){ $(document.forms.lb_forgot_password_form).observe('submit', Scribd.login.sendForm); }); Scribd.login = new Scribd.loginManager(); // Load the FB JS API Asychronously document.observe('dom:loaded', function() { var e = document.createElement('script'); e.async = true; e.src = document.location.protocol + '//connect.facebook.net/en_US/all.js'; document.getElementById('fb-root').appendChild(e); if (document.cookie.match('user_forced_logout=true')) { $$('.facepile_wrap').invoke('hide'); } }); // Handle DOM updates to re-parse FBML tags document.observe('Scribd:dom_updated', function(e){ var el = e.element(); if(window.FB && FB.XFBML) FB.XFBML.parse(el); }); document.observe(Scribd.Facebook.EVENTS.loaded, Scribd.blueBarUtil.onLoadHandler); var facebookUser = false; Event.observe(window, 'load', function() { new Scribd.AdHider(); }); Scribd.Smartling = new Scribd.SmartlingManager();